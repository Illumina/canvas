using System;
using System.Collections.Generic;
using Isas.Shared.Utilities.FileSystem;
using NDesk.Options;

namespace CanvasSmooth
{
    class Program
    {
        /// <summary>
        /// Displays help at the command line.
        /// </summary>
        /// <param name="p">NDesk OptionSet containing command line parameters.</param>
        static void ShowHelp(OptionSet p)
        {
            Console.WriteLine("Usage: CanvasSmooth.exe [OPTIONS]+");
            Console.WriteLine("Smooth bin counts by repeated median filter");
            Console.WriteLine();
            Console.WriteLine("Options:");
            p.WriteOptionDescriptions(Console.Out);
        }

        static int Main(string[] args)
        {
            CanvasCommon.Utilities.LogCommandLine(args);
            IFileLocation inputFile = null;
            IFileLocation outputFile = null;
            uint maxHalfWindowSize = 0; // window size: 2 * "half window size" + 1
            bool needHelp = false;

            OptionSet p = new OptionSet()
            {
                { "i|infile=",            "input file - usually generated by CanvasClean",           v => inputFile = new FileLocation(v) },
                { "o|outfile=",           "text file to output containing smoothed bins",            v => outputFile = new FileLocation(v) },
                { "h|help",               "show this message and exit",                              v => needHelp = v != null },
                { "w|maxHalfWindowSize=", $"maximum half window size. Default: {maxHalfWindowSize}", v => maxHalfWindowSize = uint.Parse(v) }
            };

            List<string> extraArgs = p.Parse(args);
            if (extraArgs.Count > 0)
            {
                Console.WriteLine("* Error: I don't understand the argument '{0}'", extraArgs[0]);
                needHelp = true;
            }

            if (needHelp)
            {
                ShowHelp(p);
                return 0;
            }

            if (inputFile == null || outputFile == null)
            {
                ShowHelp(p);
                return 1;
            }

            if (!inputFile.Exists)
            {
                Console.WriteLine("CanvasSmooth.exe: File {0} does not exist! Exiting.", inputFile);
                ShowHelp(p);
                return 1;
            }

            CanvasSmooth smoother = new CanvasSmooth(maxHalfWindowSize);
            return smoother.Run(inputFile, outputFile);
        }
    }
}
